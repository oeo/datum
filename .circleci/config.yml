version: 2.1
orbs:
  aws-cli: circleci/aws-cli@1.2.1
jobs:

  deploy_staging:
    docker:
      - image: cimg/node:15.0.1
    #docker:
    #  - image: circleci/node:14
    environment:
      NODE_ENV: staging
    steps:
      - checkout
      - run:
          name: install serverless
          command: sudo npm install -g serverless@3.34.0
      - restore_cache:
          keys:
            - cache-5-{{ checksum "yarn.lock" }}
      - run:
          name: install nvm
          command: |
            curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash
            source ~/.bashrc
            nvm install
            nvm use
      - run:
          name: yarn install
          command: yarn install
      - run:
          name: prune deps
          command: |
            curl -sf https://gobinaries.com/tj/node-prune | sh
            sudo npm i -g modclean
            node-prune
            modclean --run
            git gc
      - save_cache:
          paths:
            - ./node_modules
          key: cache-5-{{ checksum "yarn.lock" }}
      - aws-cli/setup
      - run: 
          name: pull env files
          command: yarn pull-envs
      - run:
          name: serverless deploy
          command: NODE_ENV=staging sls deploy -c serverless.yml -s staging --verbose

  deploy_production:
    docker:
      - image: circleci/node:14
    environment:
      NODE_ENV: production
    steps:
      - checkout
      - run:
          name: Install Serverless Framework
          command: npm install -g serverless@3.34.0
      - restore_cache:
          keys:
            - cache-5-{{ checksum "yarn.lock" }}
      - run:
          name: Install Node Dependencies
          command: yarn install
      - run:
          name: Prune Node Dependencies
          command: |
            curl -sf https://gobinaries.com/tj/node-prune | sh
            sudo npm i -g modclean
            node-prune
            modclean --run
            git gc
      - save_cache:
          paths:
            - ./node_modules
          key: cache-5-{{ checksum "yarn.lock" }}
      - aws-cli/setup
      - run: 
          name: Pulling environment files
          command: yarn pull-envs
      - run:
          name: Deploying on Serverless
          command: NODE_ENV=production sls deploy -c serverless.yml -s production --verbose

workflows:
  deploy:
    jobs:
      - deploy_staging:
          context: build
      - deploy_production_approval:
          type: approval
          requires:
            - deploy_staging
      - deploy_production:
          context: build
          requires:
            - deploy_production_approval

